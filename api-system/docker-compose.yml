#docker-compose -f mysql-phpmyadmin.yml up -d
#docker container run -p 3306:3306 --name=mysql -e MYSQL_ROOT_PASSWORD="root" mysql:8.0.27
version: "3.7"

services:
    mysql:
        image: mysql:8.0.27 # mac: mysql:8.0.28-oracle
        container_name: mysql
        hostname: mysql
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: test_db
        ports:
            - 3306:3306
        volumes:
            - $HOME/Avell02/database/mysql_db:/var/lib/mysql
            - $HOME/Avell02/database/backup:/backup
        networks:
            - mysql
        profiles:
            - advance

    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        container_name: phpmyadmin
        environment:
            PMA_HOST: localhost:3306
            PMA_PORT: 3306 #uncomment if mysql is not on host network
            # PMA_ARBITRARY: 1 //If you want to enter login details manually
            PMA_USER: root
            PMA_PASSWORD: root
        ports:
            - 8000:80
        # depends_on:
        #     - mysqldb
        networks:
            - mysql
        profiles:
            - advance

networks:
  mysql: # docker-compose-files_mysql
    driver: bridge
# networks: -- To use above network services in other projects add this networks property
#  docker-compose-files_mysql: -- {{directory_name}}_{{network_name}}
#    external: true -- are you using external network?

#If you face issue connecting
# CREATE USER 'USERNAME' IDENTIFIED BY 'password';
# GRANT ALL PRIVILEGES ON *.* TO 'USERNAME' WITH GRANT OPTION;
# ALTER USER 'USERNAME' IDENTIFIED WITH mysql_native_password BY 'PASSWORD';
# FLUSH PRIVILEGES;
# ***replace USERNAME and PASSWORD only and not password
